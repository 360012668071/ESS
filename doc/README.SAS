-*- indented-text -*-

($Revision: 1.2 $)

ESS: Using SAS
==============

This module is currently undergoing development.  It is not as stable
as the S language support.  However, it should be functional, if
slightly buggy.  Please send any suggestions and bug reports to
ess-bugs@stat.math.ethz.ch.

ESS (originally S-mode) was initially designed for use with S(tm) and
S-PLUS(tm).  However, it has been recently extended to support other
languages, including SAS(tm).  If you are looking for a stable, old
SAS mode, we suggest Cook's SAS mode.  However, those features and new
advanced features are being merged with the development of ESS[SAS],
which is similar in behavior to the interface for S (unlike Cook's SAS
mode).  We denote by _Emacs_, one of the GNU family of editors, either
Emacs (as developed and maintained by the Free Software Foundation) or
XEmacs (which a derivative work).

The following is covered in this document:
- non ESS general Emacs features.
- Editing files.
- running a SAS process as an inferior process to Emacs (we
  include 
- using transcripts.
- Scenarios for use (possibilities, based on actual usage)
- Philosophies

We assume that you are familiar with Emacs terminology and syntax:
file, buffer, region, description of keys etc.  If not, please read
the New Users guide (found in the info pages, "C-h i" (by pressing
control h, i) or Tutorial, "C-h t").


ESS[SAS]: Editing Files
=====================

ESS[SAS] is the mode for editing S language files.  This mode handles:

- (known bugs) proper indenting, generated by both [Tab] and
  [Return]. 
- (known bugs) color and font choices based on syntax.
- ability to send the contents of a single buffer, regions, lines, and 
  functions to an inferior process, if one is currently running.
- ability to switch between processes which would be the target of the 
  buffer (for the above).

It should be automatically turned on when loading a file with a ".sas"
suffix (or other, if specified in ess-site).  However, one will have
to start up an inferior process to take advantage of the interactive
capabilities.


iESS: Inferior ESS processes.
=============================

iESS (inferior ESS) is the mode for interfacing with active
statistical processes (programs).  This mode handles:

- proper indenting, generated by both [Tab] and [Return].
- color and font highlighting based on syntax.
- ability to send the contents of a single buffer, regions, lines, and 
  functions to an inferior process, if one is currently running.
- The ability to request help from a process for variables and
  functions, and to have the results sent into a separate buffer.
- completion of object names and file names.
- interactive history mechanism
- transcript recording and editing

To start up this mode, use:
   M-x SAS



Scenarios for use
=================

We present some basic suggestions for using ESS to interact with S.
These are just a subset of approaches, many better approaches are
possible.  Contributions of examples of how you work with ESS are
appreciated (especially since it helps us determine priorities on
future enhancements)! (comments as to what should be happening are
prefixed by "##").

Comment 1:  Avoid the *SAS:1* buffer.  This is strictly for
debugging.  Refer to the .lst and .log buffers for monitoring output! 

1:  ## Start up SAS in a process buffer (this will be *SAS:1*) 
    M-x SAS
    ## Load a buffer to work with
    C-x C-f 971103work.sas
    ## enter program, functions, and code into work buffer, and send
    ## entire contents to SAS when ready
    C-c C-b
    ## Go to *SAS:1* buffer, which is the process buffer, and examine
    ## the results.
    C-x C-b rossini.971103work.S
    ## Or you could've selected a region (using the mouse, or keyboard 
    ## via setting point/mark) and 
    C-c C-r
    ## Or you could step through, line by line, using 
    C-c C-n
    ## Or just send a single line (without moving to the next) using
    C-c [RETURN]
    ## where [RETURN] is the return key.

2:  ## Load the file you want to work with
    C-c C-f file.sas
    ## Edit as appropriate, and then start up S-PLUS 3.x
    M-x SAS
    ## Go back to the file editing buffer
    C-x b file.sas
    ## send regions, lines, or the entire file contents to S-PLUS (the 
    ## last one is demonstrated below)
    C-c C-b
