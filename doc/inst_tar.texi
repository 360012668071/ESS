
@itemize @bullet
@item
  cd to a directory where you keep emacs lisp files, or create a new
  directory to hold the distribution.  This directory will be referred
  to below as "the ESS distribution directory".  It will contain,
  at the end, the tar file @file{ESS-5.1.13.tar.gz}, and a directory for
  the ESS source, which will be termed "the ESS-5.1.13 source directory".
  Note that the .elc files may be installed elsewhere (as specified in the
  Makefile) if desired.
@item
  Retrieve the compressed tar file from one of the FTP or WWW archive
  sites via FTP (or HTTP).
@item
  Copy @file{ESS-5.1.13.tar.gz} to the location where you want the
  ESS-5.1.13 directory, and cd there.  Extract the files from the
  distribution, which will unpack into a subdirectory, ESS-5.1.13.
@example
	gunzip ESS-5.1.13.tar.gz
	tar vxf ESS-5.1.13.tar
@end example
	(or: @code{gunzip < ESS-5.1.13.tar.gz | tar vxf -} ).
	(or using GNU tar:  @code{tar zvxf ESS-5.1.13.tar.gz}).

  The tar command will extract files into the current directory.

  Do not create ESS-5.1.13 yourself, or you will get an extra level of
  depth to your directory structure.
@item
  Edit the file @file{ess-site.el} as explained in the comments section of
  that file.  Installations that are using ESS only for S-plus 3.x
  will probably not need to make any changes.  Installations that also
  have one or more of (S+5 S4 R SAS XLispStat Stata) may need to uncomment
  corresponding lines in @file{ess-site.el}.
@item
  @b{READ THIS ITEM THOROUGHLY BEFORE STARTING}:

  In the ESS-5.1.13 directory, edit the file Makeconf (only if you want
  to place the executables in other locations; see LISPDIR and
  INFODIR) and then type:
@example
	make
@end example

  If this works, then you might try:
@example
	make install
@end example
  Note that the latter does the former as well, so if you are feeling
  lucky, you might want to skip it.

  This will install the info files (and the lisp files, if they are to go
  in another directory).  Don't forget to edit the file @file{dir} in the
  info directory specified by @code{INFODIR} in @file{doc/Makefile}.  See
  the sample @file{dir} file for an example of the line to add.

  If you are using XEmacs, you might do:
@example
	make EMACS=xemacs
@end example

  and then
@example
	make EMACS=xemacs install
@end example
  instead of editing the Makefile.

  @emph{Note} that you might need to use @bold{GNU make} for everything to
  work properly

  An alternative, if you are running XEmacs and have access to the
  XEmacs system directories, would be to place the directory in the
  site-lisp directory, and simply type @code{make} (and copy the
  documentation as appropriate).

  For Emacs, you would still have to move the files into the top level
  site-lisp directory.
@item
  Add the line
@example
  (load "/PATH/ess-site")
@end example
  to your .emacs file (or default.el or site-init.el, for a site-wide
  installation).  Replace `/PATH' above with the value of
  ess-lisp-directory as defined in ess-site.el.

  Alternatively, if ess-site.el is in your current Lisp path, you can
  do:
@example
	(require 'ess-site)
@end example
  to configure Emacs for ESS.
@item
  (OPTIONAL) If you are running S-PLUS or R, you might consider
  installing the database files.  From within (X)Emacs, @code{C-x d} to the
  directory containing ESS.  Now:
@example
       M-x S+3
@end example
  (or M-x S+5: get running.  once you have reached the SPLUS prompt, do:)
@example
       M-x ess-create-object-name-db
@end example
  (this will create the file: ess-s+3-namedb.el; if it isn't in the
   ESS directory, move it there).

  Then, completions will be autoloaded and will not be regenerated for
  every session.

  For R, do the same, using
@example
      M-x R
@end example
  and then @code{M-x ess-create-object-name-db} creating
  @file{ess-r-namedb.el}; if it isn't in the ESS directory, move it there).
@item
  For more information on using ESS in your daily work, see the files
  README.S, README.SAS, and README.XLispStat.

  For the impatient, the quick version of usage follows:
@item
  To edit statistical programs, load the files with the requiste
  extensions  (".sas" for SAS, ".S" for S-PLUS, ".R" for R, and ".lsp"
  for XLispStat).
@item
  To run statistical processes under (X)Emacs:

  Run S-PLUS 3.x with:
@example
	M-x S+3
@end example
  (or M-x S  using backwards compatibility).  You will then be asked
  for a pathname ("S starting data directory?"), from which to start
  the process.  Similarly for S-PLUS 5.x.

  If you wish to run R, you can start it with:
@example
	M-x R
@end example

  XLispStat can be run with
@example
	M-x XLS
@end example

  SAS can be run with:
@example
	M-x SAS
@end example


@item
  That's it!
@end itemize
